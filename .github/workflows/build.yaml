name: Build and Release Flet App for Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Visual Studio 2022 Build Tools (Native Desktop)
        shell: powershell
        run: |
          Write-Output "Instalando Visual Studio 2022 Build Tools con workload Desktop development with C++..."
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.NativeDesktop" -y
          Write-Output "Visual Studio 2022 Build Tools instalados."

      - name: Enable Developer Mode
        shell: powershell
        run: |
          Write-Output "Habilitando Developer Mode..."
          reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion/AppModelUnlock" /v "AllowDevelopmentWithoutDevLicense" /t REG_DWORD /d 1 /f
          Write-Output "Developer Mode activado."

      - name: Install Flet CLI and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flet
          pip install -r requirements.txt || echo "No se encontr√≥ requirements.txt"

      - name: Build Windows Application with Flet
        run: |
          flet build windows

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: flet-app-windows
          path: dist/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release v1.0.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/main.exe
          asset_name: flet-app-windows.exe
          asset_content_type: application/octet-stream
